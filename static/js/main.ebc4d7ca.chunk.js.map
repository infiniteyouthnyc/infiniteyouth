{"version":3,"sources":["logo.svg","components/IYNavbar/logo.png","components/IYHeader.jsx","components/IYHome/IYHome.jsx","components/IYArtists.jsx","components/IYEvents.jsx","components/IYGallery.jsx","components/IYBeats.jsx","components/IYPress.jsx","components/IYServices.jsx","components/IYContact.jsx","components/Routes.jsx","components/IYNavbar/IYNavbar.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","IYHeader","IYHome","props","Carousel","Item","className","src","alt","Caption","IYArtists","id","Jumbotron","style","backgroundColor","height","IYEvents","IYGallery","IYBeats","IYPress","IYServices","IYContact","Routes","path","exact","component","BEGIN_OPACITY_TRANSITION","window","innerHeight","END_OPACITY_TRANSITION","IYNavbar","useState","selectedSection","activeKey","setActiveKey","hoverKey","setHoverKey","setBackgroundColor","handleScroll","scrollHeight","scrollY","ids","sections","map","section","document","getElementById","offsetTop","updateSelectedSection","opacity","transitionBackground","useEffect","singlePage","onscroll","fixed","stickToTop","Navbar","expand","fontFamily","fontWeight","letterSpacing","fontSize","padding","Brand","href","to","require","Toggle","Collapse","Nav","Link","marginLeft","marginRight","textDecorationLine","color","transition","onSelect","onMouseEnter","onMouseLeave","title","App","navbarItems","Boolean","location","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.ebc4d7ca.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.9c13179d.png\";","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Jumbotron } from \"react-bootstrap\";\n\nfunction IYHeader(props) {\n  return (\n    <div id=\"home\">\n      <Jumbotron\n        style={{ backgroundColor: \"rgb(200, 200, 200)\", height: \"40vh\" }}\n      >\n        Featured\n      </Jumbotron>\n    </div>\n  );\n}\n\nIYHeader.propTypes = {};\n\nexport default IYHeader;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Carousel } from \"react-bootstrap\";\n\nfunction IYHome(props) {\n  return (\n    <Carousel>\n      <Carousel.Item>\n        <img\n          className=\"d-block w-100\"\n          src=\"holder.js/800x400?text=First slide&bg=373940\"\n          alt=\"First slide\"\n        />\n        <Carousel.Caption>\n          <h3>First slide label</h3>\n          <p>Nulla vitae elit libero, a pharetra augue mollis interdum.</p>\n        </Carousel.Caption>\n      </Carousel.Item>\n      <Carousel.Item>\n        <img\n          className=\"d-block w-100\"\n          src=\"holder.js/800x400?text=Second slide&bg=282c34\"\n          alt=\"Third slide\"\n        />\n\n        <Carousel.Caption>\n          <h3>Second slide label</h3>\n          <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n        </Carousel.Caption>\n      </Carousel.Item>\n      <Carousel.Item>\n        <img\n          className=\"d-block w-100\"\n          src=\"holder.js/800x400?text=Third slide&bg=20232a\"\n          alt=\"Third slide\"\n        />\n\n        <Carousel.Caption>\n          <h3>Third slide label</h3>\n          <p>\n            Praesent commodo cursus magna, vel scelerisque nisl consectetur.\n          </p>\n        </Carousel.Caption>\n      </Carousel.Item>\n    </Carousel>\n  );\n}\n\nIYHome.propTypes = {};\n\nexport default IYHome;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Jumbotron } from \"react-bootstrap\";\n\nfunction IYArtists(props) {\n  return (\n    <div id=\"artists\">\n      <Jumbotron\n        style={{ backgroundColor: \"rgb(200, 200, 200)\", height: \"100vh\" }}\n      >\n        Artists\n      </Jumbotron>\n    </div>\n  );\n}\n\nIYArtists.propTypes = {};\n\nexport default IYArtists;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Jumbotron } from \"react-bootstrap\";\n\nfunction IYEvents(props) {\n  return (\n    <div id=\"events\">\n      <Jumbotron\n        style={{ backgroundColor: \"rgb(200, 200, 200)\", height: \"100vh\" }}\n      >\n        Events\n      </Jumbotron>\n    </div>\n  );\n}\n\nIYEvents.propTypes = {};\n\nexport default IYEvents;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Jumbotron } from \"react-bootstrap\";\n\nfunction IYGallery(props) {\n  return (\n    <div id=\"gallery\">\n      <Jumbotron\n        style={{ backgroundColor: \"rgb(200, 200, 200)\", height: \"20vh\" }}\n      >\n        Gallery\n      </Jumbotron>\n    </div>\n  );\n}\n\nIYGallery.propTypes = {};\n\nexport default IYGallery;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Jumbotron } from \"react-bootstrap\";\n\nfunction IYBeats(props) {\n  return (\n    <div id=\"beats\">\n      <Jumbotron\n        style={{ backgroundColor: \"rgb(200, 200, 200)\", height: \"20vh\" }}\n      >\n        Beats\n      </Jumbotron>\n    </div>\n  );\n}\n\nIYBeats.propTypes = {};\n\nexport default IYBeats;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Jumbotron } from \"react-bootstrap\";\n\nfunction IYPress(props) {\n  return (\n    <div id=\"press\">\n      <Jumbotron\n        style={{ backgroundColor: \"rgb(200, 200, 200)\", height: \"20vh\" }}\n      >\n        Press\n      </Jumbotron>\n    </div>\n  );\n}\n\nIYPress.propTypes = {};\n\nexport default IYPress;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Jumbotron } from \"react-bootstrap\";\n\nfunction IYServices(props) {\n  return (\n    <div id=\"services\">\n      <Jumbotron\n        style={{ backgroundColor: \"rgb(200, 200, 200)\", height: \"20vh\" }}\n      >\n        Services\n      </Jumbotron>\n    </div>\n  );\n}\n\nIYServices.propTypes = {};\n\nexport default IYServices;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Jumbotron } from \"react-bootstrap\";\n\nfunction IYContact(props) {\n  return (\n    <div id=\"contact\">\n      <Jumbotron\n        style={{ backgroundColor: \"rgb(200, 200, 200)\", height: \"20vh\" }}\n      >\n        Contact\n      </Jumbotron>\n    </div>\n  );\n}\n\nIYContact.propTypes = {};\n\nexport default IYContact;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport IYHeader from \"./IYHeader.jsx\";\nimport IYHome from \"./IYHome/IYHome.jsx\";\nimport IYArtists from \"./IYArtists.jsx\";\nimport IYEvents from \"./IYEvents.jsx\";\nimport IYGallery from \"./IYGallery.jsx\";\nimport IYBeats from \"./IYBeats.jsx\";\nimport IYPress from \"./IYPress.jsx\";\nimport IYServices from \"./IYServices.jsx\";\nimport IYContact from \"./IYContact.jsx\";\n\nexport default function Routes() {\n  return (\n    <Switch>\n      <Route path=\"/\" exact component={IYHome} />\n      <Route path=\"/artists\" exact component={IYArtists} />\n      <Route path=\"/events\" exact component={IYEvents} />\n      <Route path=\"/gallery\" exact component={IYGallery} />\n      <Route path=\"/beats\" exact component={IYBeats} />\n      <Route path=\"/press\" exact component={IYPress} />\n      <Route path=\"/services\" exact component={IYServices} />\n      <Route path=\"/contact\" exact component={IYContact} />\n    </Switch>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { LinkContainer } from \"react-router-bootstrap\";\nimport { Nav, Navbar } from \"react-bootstrap\";\n\nconst OPACITY_THRESHOLD = 0.1;\nconst OPACITY_WINDOW_BUFFER = 0.2;\nconst BEGIN_OPACITY_TRANSITION =\n  (1 - OPACITY_WINDOW_BUFFER) * window.innerHeight;\nconst END_OPACITY_TRANSITION = (1 + OPACITY_WINDOW_BUFFER) * window.innerHeight;\n\n/**\n * A navigation bar component for navigating between sections of the app.\n */\nfunction IYNavbar(props) {\n  const [activeKey, setActiveKey] = useState(props.selectedSection);\n  const [hoverKey, setHoverKey] = useState(\"\");\n  const [backgroundColor, setBackgroundColor] = useState(\n    `rgba(250, 250, 250, 0.7)`\n  );\n\n  const updateSelectedSection = scrollHeight => {\n    const ids = props.sections.map(section => section.id);\n    var selectedSection = ids[0];\n    for (const id of ids) {\n      const sectionTop = document.getElementById(id).offsetTop;\n      if (scrollHeight >= sectionTop) {\n        selectedSection = id;\n      } else {\n        break;\n      }\n    }\n    setActiveKey(selectedSection);\n  };\n\n  const transitionBackground = scrollHeight => {\n    var opacity = 0.7;\n    if (scrollHeight >= BEGIN_OPACITY_TRANSITION) {\n      opacity =\n        (END_OPACITY_TRANSITION - scrollHeight) /\n        (END_OPACITY_TRANSITION - BEGIN_OPACITY_TRANSITION);\n      opacity = opacity < OPACITY_THRESHOLD ? OPACITY_THRESHOLD : opacity;\n    }\n    setBackgroundColor(`rgba(250, 250, 250, ${opacity})`);\n  };\n\n  const handleScroll = () => {\n    const scrollHeight = window.scrollY;\n    updateSelectedSection(scrollHeight);\n    transitionBackground(scrollHeight);\n  };\n\n  useEffect(() => {\n    if (props.singlePage) {\n      window.onscroll = handleScroll;\n    }\n  });\n\n  const fixed = props.stickToTop ? \"top\" : \"\";\n\n  return (\n    <Navbar\n      expand=\"md\"\n      fixed={fixed}\n      style={{\n        backgroundColor: backgroundColor,\n        fontFamily: \"AUDIOWIDE\",\n        fontWeight: 400,\n        letterSpacing: \".04em\",\n        fontSize: 20,\n        padding: \"5px 30px\"\n      }}\n    >\n      <Navbar.Brand href=\"#home\">\n        <Link to=\"/\">\n          <img\n            src={require(\"./logo.png\")}\n            height=\"30\"\n            className=\"d-inline-block align-top\"\n            alt=\"React Bootstrap logo\"\n          />\n        </Link>\n      </Navbar.Brand>\n      <Navbar.Toggle />\n      <Navbar.Collapse className=\"justify-content-end\">\n        <Nav activeKey={`#${props.selectedSection}`}>\n          {props.sections.map(section => {\n            return (\n              <LinkContainer to={`/${section.id}`}>\n                <Nav.Link\n                  style={{\n                    marginLeft: 12,\n                    marginRight: 12,\n                    fontWeight: activeKey === section.id ? \"bold\" : \"\",\n                    textDecorationLine:\n                      hoverKey === section.id ? \"underline\" : \"none\",\n                    color: \"rgba(35, 35, 45, 0.75)\",\n                    transition: [\"all\", \"3s\", \"easeIn\", \"0s\"]\n                  }}\n                  onSelect={() => setActiveKey(section.id)}\n                  onMouseEnter={() => setHoverKey(section.id)}\n                  onMouseLeave={() => setHoverKey(\"\")}\n                >\n                  {section.title}\n                </Nav.Link>\n              </LinkContainer>\n            );\n          })}\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  );\n}\n\nIYNavbar.propTypes = {\n  /** The section of the app that starts as selected */\n  selectedSection: PropTypes.string,\n  /** The sections of the page */\n  sections: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string,\n      title: PropTypes.string\n    })\n  ),\n  /** If the app is a single-page app, this is true, which\n   * means that upon selecting a section, the app will scroll to the section.\n   * Otherwise, clicking on a navigation item reroutes to the page for that\n   * section.\n   */\n  singlePage: PropTypes.bool,\n  /** Whether the Navbar is sticky or not. */\n  stickToTop: PropTypes.bool\n};\n\nexport default IYNavbar;\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\n\nimport Routes from \"./components/Routes.jsx\";\nimport IYNavbar from \"./components/IYNavbar/IYNavbar.jsx\";\n\nimport navbarItems from \"./components/IYNavbar/IYNavbarItems.json\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n        <IYNavbar\n          selectedSection=\"home\"\n          sections={navbarItems}\n          singlePage={false}\n          stickToTop={false}\n        />\n        <br />\n        <Routes />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"./scss/custom.scss\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}